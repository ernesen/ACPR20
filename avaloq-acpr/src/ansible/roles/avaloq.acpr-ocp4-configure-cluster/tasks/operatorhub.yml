# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: 'Disable default OperatorHub'
  diff: yes
  k8s:
    api_key: '{{ api_key }}'
    kubeconfig: '{{ authfile | default(omit) }}'
    state: present
    api_version: config.openshift.io/v1
    kind: OperatorHub
    name: cluster
    definition:
      metadata:
        labels:
          app.kubernetes.io/managed-by: avaloq-acpr
      spec:
        disableAllDefaultSources: true
  when: acpr_redhat_disconnected|bool

- name: Generate default catalogsources for redhat disconnected clusters
  set_fact:
    acpr_operatorhub_catalogsources: '{{ acpr_operatorhub_catalogsources|combine(avq_operatorhub_catalogsources) }}'
  when: acpr_redhat_disconnected|bool

- name: Fail if catalogsource name is invalid
  fail:
    msg: 'Catalogsource "{{ item.key }}" is invalid. Please use a different name'
  loop: '{{ acpr_operatorhub_catalogsources|dict2items }}'
  loop_control:
    label: "{{ item.key }}"
  when:
    - acpr_redhat_disconnected|bool
    - acpr_operatorhub_catalogsources is defined
    - item.key in ['certified-operators', 'community-operators', 'redhat-marketplace', 'redhat-operators']

- name: Create OperatorHub CatalogSource
  diff: yes
  k8s:
    api_key: '{{ api_key }}'
    kubeconfig: '{{ authfile | default(omit) }}'
    state: present
    kind: CatalogSource
    api_version: operators.coreos.com/v1alpha1
    name: '{{ item.key }}'
    namespace: openshift-marketplace
    definition:
      metadata:
        labels:
          app.kubernetes.io/managed-by: avaloq-acpr
      spec:
        sourceType: grpc
        image: '{{ item.value.image }}'
        displayName: '{{ item.value.displayname}}'
        updateStrategy:
          registryPoll:
            interval: 30m
  loop: '{{ acpr_operatorhub_catalogsources|dict2items }}'
  loop_control:
    label: "{{ item.key }}"
  when:
    - acpr_operatorhub_catalogsources is defined
