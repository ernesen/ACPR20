# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: List
items:

  ### Route
  - apiVersion: v1
    kind: Route
    metadata:
      name: alertmanager
      labels:
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
    spec:
{% if acpr_monitoring_alertmanager_hostname is defined %}
      host: {{ acpr_monitoring_alertmanager_hostname }}
{% endif %}
      port:
        targetPort: alerts
      tls:
        destinationCACertificate: "-----BEGIN COMMENT-----\nThis is an empty PEM file
        created to provide backwards compatibility\nfor reencrypt routes that have no
        destinationCACertificate. This \ncontent will only appear for routes accessed
        via /oapi/v1/routes.\n-----END COMMENT-----\n"
        insecureEdgeTerminationPolicy: Redirect
        termination: reencrypt
      to:
        kind: Service
        name: alertmanager-proxy
        weight: 100
      wildcardPolicy: None

  ### ServiceAccount
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: alertmanager
      labels:
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.alertmanager: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"alertmanager"}}'

  ### ClusterRoleBinding
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: alertmanager-acpr-monitoring-auth-delegator
      labels:
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - kind: ServiceAccount
        name: alertmanager
        namespace: {{ namespace }}

  ### Service
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: alertmanager-proxy
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
      name: alertmanager-proxy
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: alertmanager-tls
    spec:
      ports:
        - name: alerts
          port: 443
          protocol: TCP
          targetPort: 9443
      selector:
        app: alertmanager
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: alertmanager-direct
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
      name: alertmanager-direct
    spec:
      ports:
        - name: alerts
          port: 9093
          protocol: TCP
          targetPort: 9093
      selector:
        app: alertmanager
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: alertmanager-cluster
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
      name: alertmanager-cluster
    spec:
      ports:
        - name: alerts
          port: 9094
          protocol: TCP
          targetPort: 9094
      selector:
        app: alertmanager
      sessionAffinity: None
      type: ClusterIP

  ### NetworkPolicy
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: alertmanager
      labels:
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
    spec:
      ingress:
        - ports:
            - port: 9443
              protocol: TCP
          from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
        - from:
            - podSelector:
                matchLabels:
                  app: alertmanager
          ports:
            - port: 9094
              protocol: TCP
        - from:
            - podSelector:
                matchLabels:
                  app: prometheus
          ports:
            - port: 9093
              protocol: TCP

  ### Deployment
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: alertmanager
        avaloq.com/app: acpr-monitoring
        app.kubernetes.io/component: monitoring
        avaloq.com/zone: core-internal
      name: alertmanager
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: alertmanager
      template:
        metadata:
          labels:
            app: alertmanager
            avaloq.com/app: acpr-monitoring
            app.kubernetes.io/component: monitoring
            avaloq.com/zone: core-internal
          name: alertmanager
        spec:
          containers:
            - image: {{ acpr_monitoring_alertmanager_image }}
              imagePullPolicy: IfNotPresent
              name: alertmanager
              args:
                - '--config.file=/etc/alertmanager/alertmanager.yml'
                - '--cluster.listen-address=:9094'
                - '--cluster.peer=alertmanager-cluster:9094'
              ports:
                - containerPort: 9093
                  name: alerts
                  protocol: TCP
{% if acpr_monitoring_alertmanager_resources_enable %}
              resources:
                limits:
                  cpu: {{ acpr_monitoring_alertmanager_resources_limit_cpu }}
                  memory: {{ acpr_monitoring_alertmanager_resources_limit_memory }}
                requests:
                  cpu: {{ acpr_monitoring_alertmanager_resources_request_cpu }}
                  memory: {{ acpr_monitoring_alertmanager_resources_request_memory }}
{% endif %}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/alertmanager
                  name: alertmanager-config
                - mountPath: /alertmanager
                  name: alertmanager-data
            - args:
                - '-provider=openshift'
                - '-https-address=:9443'
                - '-http-address='
                - '-email-domain=*'
                - '-upstream=http://localhost:9093'
{% if acpr_monitoring_alertmanager_additional_auth.htpasswd.accounts is defined %}
                - '-htpasswd-file=/etc/proxy/htpasswd/auth'
{% if acpr_monitoring_alertmanager_additional_auth.htpasswd.hidden %}
                - '-display-htpasswd-form=false'
{% endif %}
{% endif %}
                - '-openshift-service-account=alertmanager'
                - '-openshift-ca=/etc/pki/tls/cert.pem'
                - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
                - '-openshift-sar={"namespace":"acpr-monitoring", "resource":"services", "name":"alerts", "verb": "get"}'
{% if acpr_monitoring_alertmanager_additional_auth.serviceaccounts.enabled %}
                - '-openshift-delegate-urls={"/": {"namespace":"acpr-monitoring", "resource":"services", "name":"alerts", "verb": "get"}}'
{% endif %}
                - '-tls-cert=/etc/tls/private/tls.crt'
                - '-tls-key=/etc/tls/private/tls.key'
                - '-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token'
                - '-cookie-secret-file=/etc/proxy/secrets/session_secret'
                - '-skip-auth-regex=^/-/healthy'
                - '-cookie-expire=4h'
              image: {{ acpr_monitoring_oauth_proxy_image }}
              imagePullPolicy: IfNotPresent
              name: alertmanager-proxy
              ports:
                - containerPort: 9443
                  name: https
                  protocol: TCP
{% if acpr_monitoring_alertmanager_proxy_resources_enable %}
              resources:
                limits:
                  cpu: {{ acpr_monitoring_alertmanager_proxy_resources_limit_cpu }}
                  memory: {{ acpr_monitoring_alertmanager_proxy_resources_limit_memory }}
                requests:
                  cpu: {{ acpr_monitoring_alertmanager_proxy_resources_request_cpu }}
                  memory: {{ acpr_monitoring_alertmanager_proxy_resources_request_memory }}
{% endif %}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/tls/private
                  name: alerts-tls
                - mountPath: /etc/proxy/secrets
                  name: alerts-secrets
{% if acpr_monitoring_alertmanager_additional_auth.htpasswd.accounts is defined %}
                - mountPath: /etc/proxy/htpasswd
                  name: alertmanager-htpasswd
{% endif %}
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: alertmanager
          serviceAccountName: alertmanager
          terminationGracePeriodSeconds: 30
          volumes:
            - name: alertmanager-config
              secret:
                defaultMode: 420
                secretName: prometheus-alerts
            - name: alerts-secrets
              secret:
                defaultMode: 420
                secretName: alerts-proxy
            - name: alerts-tls
              secret:
                defaultMode: 420
                secretName: alertmanager-tls
            - emptyDir: {}
              name: alertmanager-data
{% if acpr_monitoring_alertmanager_additional_auth.htpasswd.accounts is defined %}
            - name: alertmanager-htpasswd
              secret:
                defaultMode: 420
                secretName: alertmanager-htpasswd
{% endif %}
