# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Generate passwords and session secrets
  block:
    - set_fact:
        grafana_session_secret: "{{ lookup('password', '/dev/null length=14 chars=ascii_letters,digits') }}"
    - set_fact:
        prometheus_session_secret: "{{ lookup('password', '/dev/null length=14 chars=ascii_letters,digits') }}"
    - set_fact:
        alertmanager_session_secret: "{{ lookup('password', '/dev/null length=14 chars=ascii_letters,digits') }}"

- name: Prepare deployment
  block:
    - include_vars:
        file:  custom_variables.yml

    - tempfile:
        state: directory
        suffix: _monitoring_deployment
      register: deployment_folder

    - name: Deploy ACPR Monitoring
      block:
        - include_role:
            name: avaloq.acpr-auth
            tasks_from: login

        # Additional uninstall tasks
        - include_tasks: uninstall-monitoring.yml

        # Prepare Prometheus password if necessary
        - include_tasks: prometheus-password.yml

        - template:
            src: "{{ item }}"
            dest: "{{ deployment_folder.path }}/{{ item | basename }}"
          with_fileglob: "{{ role_path }}/templates/*"

        - command: "oc --match-server-version=true apply -n {{ namespace }} -f {{ deployment_folder.path }}/"
          environment:
            KUBECONFIG: '{{ KUBECONFIG }}'
          changed_when: false

        - include_tasks: etcd.yml
        - include_tasks: grafana-dashboards.yml
        - include_tasks: prometheus-rules.yml

        - name: Restart all pods
          command: "oc --match-server-version=true delete pods --all -n {{ namespace }}"
          environment:
            KUBECONFIG: '{{ KUBECONFIG }}'
          changed_when: false
          when: acpr_monitoring_restart_all_monitoring_pods

        - name: Add SCC to prometheus-node-exporter serviceaccount
          command: "oc --match-server-version=true adm policy add-scc-to-user -z prometheus-node-exporter hostaccess -n {{ namespace }}"
          environment:
            KUBECONFIG: '{{ KUBECONFIG }}'
          changed_when: false

        - name: Wait for Grafana pod
          command: "oc --match-server-version=true get pods -l app=grafana --no-headers --field-selector=status.phase=Running -n {{ namespace }} --output=jsonpath={.items..metadata.name}"
          environment:
            KUBECONFIG: '{{ KUBECONFIG }}'
          register: grafana_pod
          retries: 60
          delay: 15
          until: grafana_pod.stdout != ''

        - name: Check Grafana health
          shell: "oc exec {{ grafana_pod.stdout }} -n {{ namespace }} -- curl http://localhost:3001/api/health"
          environment:
              KUBECONFIG: '{{ KUBECONFIG }}'
          register: grafana_health
          retries: 10
          delay: 15
          until: grafana_health.rc == 0

        - name: Set-up Grafana Sandbox directory
          shell: "{{ item }}"
          with_items:
            - "oc exec {{ grafana_pod.stdout }} -n acpr-monitoring -- curl -H \"X-Forwarded-User: admin\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://localhost:3001/api/folders -X POST -d '{\"uid\": \"nErXDvCkzz\", \"title\": \"Sandbox (writable)\"}'"
            - "oc exec {{ grafana_pod.stdout }} -n acpr-monitoring -- curl -H \"X-Forwarded-User: admin\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" http://localhost:3001/api/folders/nErXDvCkzz/permissions -X POST -d '{\"items\": [{\"role\": \"Viewer\",\"permission\": 2},{\"role\": \"Editor\",\"permission\": 2}]}'"
          changed_when: false
          environment:
            KUBECONFIG: '{{ KUBECONFIG }}'

  always:
    - file:
        path: "{{ deployment_folder.path }}"
        state: absent

    - include_role:
        name: avaloq.acpr-auth
        tasks_from: logout
