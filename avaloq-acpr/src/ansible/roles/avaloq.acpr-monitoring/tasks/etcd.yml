# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Check if secret already exists
  command: 'oc --match-server-version=true get secret etcd-client-certs -n {{ namespace }} -o name'
  environment:
    KUBECONFIG: '{{ KUBECONFIG }}'
  register: openshift_secret_etcdclient
  failed_when: false
  changed_when: false

- name: ETCD monitoring deplyoment 
  block:
    - name: Create temp directory for ETCD deployment
      tempfile:
        state: directory
        suffix: _etcd_configuration
      register: tmp_directory

    - name: Store directory path
      set_fact:
        prometheus_etcd_certificates_directory: "{{ tmp_directory.path }}"

    - name: Fetch CA files from master to temp dirctory
      fetch:
        src:  "/etc/etcd/ca/{{ item }}"
        dest: "{{ prometheus_etcd_certificates_directory }}/{{ item }}"
        flat: true
      become: yes
      delegate_to: "{{ groups.masters[0] }}"
      loop:
        - ca.key
        - ca.crt

    - name: Generate openssl.cnf im temp directory
      copy:
        content: |
          [ req ]
          req_extensions = v3_req
          distinguished_name = req_distinguished_name
          [ req_distinguished_name ]
          [ v3_req ]
          basicConstraints = CA:FALSE
          keyUsage = nonRepudiation, keyEncipherment, digitalSignature
          extendedKeyUsage=serverAuth, clientAuth
        dest: "{{ prometheus_etcd_certificates_directory }}/openssl.cnf"

    - name: Generate key, csr and certificate
      command: "{{ item }}"
      args:
        chdir: "{{ prometheus_etcd_certificates_directory }}"
      loop:
        - "openssl genrsa -out etcd.key 2048"
        - "openssl req -new -key etcd.key -out etcd.csr -subj \"/CN=etcd\" -config openssl.cnf"
        - "openssl x509 -req -in etcd.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out etcd.crt -days 365 -extensions v3_req -extfile openssl.cnf"

    - name: Store ca, crt and key b64 encoded
      set_fact:
        etcd_client_ca: "{{ lookup('file', '{{ prometheus_etcd_certificates_directory }}/ca.crt') | b64encode }}"
        etcd_client_crt: "{{ lookup('file', '{{ prometheus_etcd_certificates_directory }}/etcd.crt') | b64encode }}"
        etcd_client_key: "{{ lookup('file', '{{ prometheus_etcd_certificates_directory }}/etcd.key') | b64encode }}"

    - name: Generarte Openshift secret 
      copy:
        content: |
          ---
          apiVersion: v1
          kind: Secret
          data:
            etcd-client-ca.crt: {{ etcd_client_ca }}
            etcd-client.crt: {{ etcd_client_crt }}
            etcd-client.key: {{ etcd_client_key }}
          metadata:
            name: etcd-client-certs
            labels:
              avaloq.com/app: acpr-monitoring
              app.kubernetes.io/component: monitoring
          type: Opaque
        dest:  "{{ prometheus_etcd_certificates_directory }}/prometheus_etcd_certificates_deployment.yml"

    - name: Deploy OpenShift secret
      command: "oc --match-server-version=true apply -n {{ namespace }} -f {{ prometheus_etcd_certificates_directory }}/prometheus_etcd_certificates_deployment.yml"
      environment:
        KUBECONFIG: '{{ KUBECONFIG }}'
  when:
    - openshift_secret_etcdclient.stdout_lines |length == 0
  always:
    - name: Remove all temporary files
      file:
        path: "{{ prometheus_etcd_certificates_directory }}"
        state: absent
