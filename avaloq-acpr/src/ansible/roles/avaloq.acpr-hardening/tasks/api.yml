# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: RH-1.2 | Do not use the basic-auth-file argument
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.basic-auth-file
    state: absent

- name: RH-1.3 | Insecure Tokens
  debug:
    msg: "not applicable"

- name: RH-1.4 | Secure communications between the API server and master nodes
  yedit:
    src: '{{ master_config_file }}'
    edits:
    - key: kubeletClientInfo.ca
      value: ca-bundle.crt
    - key: kubeletClientInfo.certFile
      value: master.kubelet-client.crt
    - key: kubeletClientInfo.keyFile
      value: master.kubelet-client.key
    - key: kubeletClientInfo.port
      value: 10250
    state: present

- name: RH-1.5 | Prevent insecure bindings
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.insecure-bind-address
    state: absent

- name: RH-1.6 | Prevent insecure port access
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.insecure-port
    state: absent

- name: RH-1.7 | Use Secure Ports for API Server Traffic
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.secure-port
    state: absent

- name: RH-1.8.1 | Manage profiling
  lineinfile:
    path: '{{ master_env_file }}'
    regexp: '^OPENSHIFT_PROFILE=web$'
    state: absent

- name: RH-1.8.2 | Manage profiling
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.schedulerArguments.profiling
    value: [false]
    state: absent

- name: RH-1.9 | Verify repair-malformed-updates argument for API compability
  yedit:
    src: '{{ master_config_file }}'
    key: repair-malformed-updates
    value: true
    state: present

- name: RH-1.10 | Verify that the AlwaysAdmit admission controller is disabled
  yedit:
    src: '{{ master_config_file }}'
    key: admissionConfig.pluginConfig.AlwaysAdmit
    value: false
    state: absent

- name: RH-1.11 | Manage the AlwaysPullImages admission controller
  yedit:
    src: '{{ master_config_file }}'
    edits:
      - key: admissionConfig.pluginConfig.AlwaysPullImages.configuration.kind
        value: DefaultAdmissionConfig
      - key: admissionConfig.pluginConfig.AlwaysPullImages.configuration.apiVersion
        value: v1
      - key: admissionConfig.pluginConfig.AlwaysPullImages.configuration.disable
        value: false
    state: present
  when: api_always_pull_images

- name: RH-1.13 | Manage the SecurityContextDeny admission controller
  yedit:
    src: '{{ master_config_file }}'
    edits:
      - key: admissionConfig.pluginConfig.SecurityContextDeny.configuration.kind
        value: DefaultAdmissionConfig
      - key: admissionConfig.pluginConfig.SecurityContextDeny.configuration.apiVersion
        value: v1
      - key: admissionConfig.pluginConfig.SecurityContextDeny.configuration.disable
        value: false
    state: present
  when: api_security_context_deny

- name: RH-1.14 | Manage the NamespaceLifecycle admission controller
  yedit:
    src: '{{ master_config_file }}'
    key: admissionConfig.pluginConfig.NamespaceLifecycle
    state: absent

- name: RH-1.15 | Configure API server auditing
  yedit:
    src: '{{ master_config_file }}'
    key: auditConfig
    state: list
  register: auditconfig
  check_mode: no

- name: RH-1.15 | Configure API server auditing - audit log file path
  assert:
    msg: 'API server auditing is not configured'
    that:
      - auditconfig.result is defined
      - auditconfig.result.auditFilePath is defined

- name: RH-1.16 | Configure API server auditing - audit log retention
  assert:
    msg: 'API server auditing is not configured'
    that:
      - auditconfig.result
      - auditconfig.result.maximumFileRetentionDays

- name: RH-1.17 | Configure API server auditing - audit log backup retention
  assert:
    msg: 'API server auditing is not configured'
    that:
      - auditconfig.result
      - auditconfig.result.maximumRetainedFiles

- name: RH-1.18 | Configure audit log file size
  assert:
    msg: 'API server auditing is not configured'
    that:
      - auditconfig.result
      - auditconfig.result.maximumFileSizeMegabytes

- name: RH-1.19 | Verify authorization-mode is not set to AlwaysAllow
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.authorization-mode
    state: absent

- name: RH-1.20 |  Remove the token-auth-file setting
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.token-auth-file
    state: absent

- name: RH-1.21 - 1.22 | Verify the API server certificates
  yedit:
    src: '{{ master_config_file }}'
    key: 'kubernetesMasterConfig.apiServerArguments.{{ item }}'
    state: absent
  loop:
    - kubelet-certificate-authority
    - kubelet-client-certificate
    - kubelet-client-key

- name: RH-1.23 / 1.25 | Remove the service account config directives
  yedit:
    src: '{{ master_config_file }}'
    key: 'kubernetesMasterConfig.apiServerArguments.{{ item }}'
    state: absent
  loop:
    - service-account-lookup
    - service-account-key-file

- name: RH-1.24 | Verify the PodSecurityPolicy is disabled
  yedit:
    src: '{{ master_config_file }}'
    key: admissionConfig.pluginConfig.PodSecurityPolicy
    state: absent

- name: RH-1.26.1 | Verify the certificate and key used for communication with etcd
  yedit:
    src: '{{ master_config_file }}'
    key: '{{ item }}'
    state: absent
  loop:
    - etcd-keyfile
    - etcd-certfile

- name: RH-1.26.2 | Verify the certificate and key used for communication with etcd
  yedit:
    src: '{{ master_config_file }}'
    edits:
      - key: etcdClientInfo.ca
        value: "master.etcd-ca.crt"
      - key: etcdClientInfo.certFile
        value: "master.etcd-client.crt"
      - key: etcdClientInfo.keyFile
        value: "master.etcd-client.key"

- name: RH-1.27 | Verify that the ServiceAccount admission controller is enabled
  yedit:
    src: '{{ master_config_file }}'
    key: admissionConfig.pluginConfig.ServiceAccount
    state: absent

#TODO: Clarify with RH the full key name
- name: RH-1.28.1 | Verify the certificate and key used to encrypt API server traffic
  yedit:
    src: '{{ master_config_file }}'
    key: '{{ item }}'
    state: absent
  loop:
    - tls-cert-file
    - tls-private-key-file

- name: RH-1.28.2 | Verify the certificate and key used to encrypt API server traffic
  yedit:
    src: '{{ master_config_file }}'
    edits:
      - key: servingInfo.clientCA
        value: "ca.crt"
      - key: servingInfo.certFile
        value: "master.server.crt"
      - key: servingInfo.keyFile
        value: "master.server.key"

# Note: partially already checked in rh-1.28
- name: RH-1.29 | Ensure that the client-ca-file argument is set as appropriate
  yedit:
    src: '{{ master_config_file }}'
    key: client-ca-file
    state: absent

# Note: partially already checked in rh-1.26
- name: RH-1.30 | Verify the CA used for communication with etcd
  yedit:
    src: '{{ master_config_file }}'
    key: etcd-cafile
    state: absent

- name: RH-1.31 | Remove the authorization-mode example
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.authorization-mode
    state: absent

- name: RH-1.32 | Verify that the NodeRestriction admission controller is enabled
  yedit:
    src: '{{ master_config_file }}'
    key: admissionConfig.pluginConfig.NodeRestriction
    state: absent

- name: RH-1.33 | Configure encryption
  yedit:
    src: '{{ master_config_file }}'
    key: kubernetesMasterConfig.apiServerArguments.experimental-encryption-provider-config
    value: ['{{ master_encryption_config }}']
    state: present

- name: RH-1.34.1 | Verify that the encryption provider is set to aescbc
  yedit:
    src: '{{ master_encryption_config }}'
    key: resources
    state: list
  register: encryption_config
  check_mode: no

- name: RH-1.34.2 | Verify that the encryption provider is set to aescbc
  assert:
    msg: 'First encryption provider is not "aescbc"'
    that:
      - encryption_config.result is defined
      - encryption_config.result[0].providers[0].aescbc is defined

- name: RH-1.35 | Enable the EventRateLimit plugin
  yedit:
    src: '{{ master_config_file }}'
    edits:
      - key: admissionConfig.pluginConfig.EventRateLimit.configuration.kind
        value: DefaultAdmissionConfig
      - key: admissionConfig.pluginConfig.EventRateLimit.configuration.apiVersion
        value: v1
      - key: admissionConfig.pluginConfig.EventRateLimit.configuration.disable
        value: false
  when: api_enable_ratelimit

# We currently only configure basic master audit logging
- name: RH-1.36 | Verify that advanced auditing is configured
  debug:
    msg: "not applicable"

- name: RH-1.37 | Adjust the request timeout argument for your cluster resources
  yedit:
    src: '{{ master_config_file }}'
    key: admissionConfig.apiServerArguments.request-timeout
    value: ['{{ api_request_timeout }}']
  when: api_request_timeout
