# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This playbook redistributes docker daemon configuration files
# (/etc/containers/registries.conf and /etc/sysconfig/docker) to all nodes in a cluster
# (i.e. group `nodes` in the inventory file). Currently only the re-configuration of OpenShift
# managed docker daemons is supported since we rely on `oc`- commands for draining nodes.
#
# Templates for these configuration files are stored in the `avaloq.acpr-docker` role.
#   * templates/docker.j2
#   * templates/registries.conf.j2
#
# By default the playbook runs in a interactive mode. Before every iteration the playbook
# waits for user's confirmation to continue. This behavior can be suppressed by setting
# variable `acpr_reconfigure_docker_interactive_mode` to false.
#
# You can limit hosts using standard Ansible limit function  i.e. --limit 'srv00[0-9].example.com'
# (i.e. apply configuration to all nodes from srv000.example.com - srv009.example.com).
#
# Each host is evicted before the configuration is copied and than docker daemon is
# restarted.
#
# Playbook expects user is logged in the cluster. This can be achieved by
# `acpr-920-login.yml` (`acpr-921-logout.yml`) role.
---
- name: Verify playbook compatibility with current ocp version
  import_playbook: helper_playbooks/ocp_compatibility_check.yml
  vars:
    avq_ocp_compatibility: [3]

- name: Verify user in 'acpr_cluster_credentials' variable has required type
  import_playbook: helper_playbooks/cluster_credentials.yml
  vars:
    cluster_credentials_required_type: 'cluster-admin-user'
  when: acpr_cluster_credentials is defined

- name: ACPR |Reconfigure docker daemon and container image registries
  hosts: nodes
  become: false
  gather_facts: false
  any_errors_fatal: true
  serial: 1
  pre_tasks:
    - block:
      - name: Generate kubeconf path
        set_fact:
          KUBECONFIG: '/tmp/acpr-kube-{{ 10000000|random }}/config'
      - name: Create kubedir
        file:
          path: '{{ KUBECONFIG|dirname }}'
          mode: 0700
          state: directory
      delegate_to: localhost
      run_once: true
  post_tasks:
    - name: Cleanup kubedir
      file:
        path: '{{ KUBECONFIG|dirname }}'
        state: absent
      delegate_to: localhost
      run_once: true
  tasks:
    - include_role:
        name: avaloq.acpr-docker
        tasks_from: docker-reconfigure
