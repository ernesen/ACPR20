# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Verify playbook compatibility with current ocp version
  import_playbook: helper_playbooks/ocp_compatibility_check.yml
  vars:
    avq_ocp_compatibility: [3]

- name: Verify user in 'acpr_cluster_credentials' variable has required type
  import_playbook: helper_playbooks/cluster_credentials.yml
  vars:
    cluster_credentials_required_type: 'cluster-admin-user'
  when: acpr_cluster_credentials is defined

- name: ACPR | Deploy additional fluentd DaemonSets
  hosts: localhost
  become: false
  gather_facts: false
  module_defaults:
    group/k8s:
      host: "{{ acpr_cluster_credentials[0]['url'] | default('https://api.{{ os_cluster_name }}:6443') }}"
      ca_cert: "{{ acpr_cluster_credentials[0]['certificateAuthorityPath'] | default(ca_certificate.path) | default('') }}"
      validate_certs: "{{ 'no' if acpr_cluster_credentials[0]['insecureSkipTlsVerify'] | default('no' if acpr_cluster_credentials is undefined) | default(False) else 'yes' }}"
  tasks:
    - block:
        - name: acpr login
          import_role:
            name: avaloq.acpr-ocp4-auth
            tasks_from: login.yml

        - name: Get fluentd DaemonSet
          k8s_info:
            api_key: "{{ api_key }}"
            kubeconfig: "{{ authfile | default(omit) }}"
            api_version: v1
            kind: daemonset
            name: logging-fluentd
            namespace: openshift-logging
          register: fluentd_daemonset

        - name: Sanitize variables
          set_fact:
            fluentd_daemonset: "{{ fluentd_daemonset.resources[0] }}"

        - name: Create fluentd ConfigMap
          k8s:
            api_key: "{{ api_key }}"
            kubeconfig: "{{ authfile | default(omit) }}"
            api_version: v1
            kind: ConfigMap
            namespace: openshift-logging
            name: "{{ item.name + '-logging-fluentd' }}"
            definition:
              data:
                fluent.conf: "{{ item.fluentdConfiguration }}"
          loop: "{{ acpr_additional_fluentd_daemonset }}"

        - name: Create fluentd DaemonSet
          k8s:
            api_key: "{{ api_key }}"
            kubeconfig: "{{ authfile | default(omit) }}"
            api_version: v1
            kind: daemonset
            namespace: openshift-logging
            definition: |
              {% set _ = fluentd_daemonset.metadata.pop('resourceVersion') %}
              {% set _ = fluentd_daemonset.metadata.pop('creationTimestamp') %}
              {% set _ = fluentd_daemonset.metadata.pop('selfLink') %}
              {% set _ = fluentd_daemonset.metadata.pop('uid') %}
              {% set _ = fluentd_daemonset.metadata.update({'name': item.name + '-logging-fluentd'}) %}
              {% set _ = fluentd_daemonset.spec.template.spec.update({'nodeSelector': item.nodeSelector}) %}
              {% for volume in fluentd_daemonset.spec.template.spec.volumes %}
              {% if volume.name == 'config' %}
              {% set remove = fluentd_daemonset.spec.template.spec.volumes.pop(loop.index0) %}
              {{ fluentd_daemonset.spec.template.spec.volumes.append({'configMap': {'defaultMode': 420, 'name': item.name + '-logging-fluentd'}, 'name': 'config'}) }}
              {%- endif %}
              {% endfor %}
              {{ fluentd_daemonset }}
          loop: "{{ acpr_additional_fluentd_daemonset }}"

      always:
        - name: acpr logout
          import_role:
            name: avaloq.acpr-ocp4-auth
            tasks_from: logout.yml
