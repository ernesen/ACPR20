# Copyright 2019 Avaloq Evolution AG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Verify playbook compatibility with current ocp version
  import_playbook: helper_playbooks/ocp_compatibility_check.yml
  vars:
    avq_ocp_compatibility: [3]

- name: Verify user in 'acpr_cluster_credentials' variable has required type
  import_playbook: helper_playbooks/cluster_credentials.yml
  vars:
    cluster_credentials_required_type: 'cluster-admin-user'
  when: acpr_cluster_credentials is defined

- name: ACPR | Logging health status
  hosts: localhost
  become: false
  gather_facts: no
  vars:
    namespace: openshift-logging
  pre_tasks:
    - name: Generate kubeconf path
      set_fact:
        KUBECONFIG: '/tmp/acpr-kube-{{ 10000000|random }}/config'
    - name: Create kubedir
      file:
        path: '{{ KUBECONFIG|dirname }}'
        mode: 0700
        state: directory
  post_tasks:
    - name: Cleanup kubedir
      file:
        path: '{{ KUBECONFIG|dirname }}'
        state: absent
  tasks:
    - block:
      - name: acpr login
        include_role:
          name: avaloq.acpr-auth
          tasks_from: login.yml
      
      - name: ES pods are Running
        command: "oc --match-server-version=true get pods -l component={{ item }} --no-headers --field-selector=status.phase=Running -n {{ namespace }} --output=jsonpath={.items..metadata.name}"
        environment:
          KUBECONFIG: '{{ KUBECONFIG }}'
        register: output
        retries: 50
        delay: 15
        until: output.stdout != ''
        changed_when: false
        loop:
          - es
          - es-ops
      
      - name: ES pods are Ready
        command: "oc --match-server-version=true get pods -l component={{ item }} -o jsonpath={.items[*].status.containerStatuses[*].ready} -n {{ namespace }}"
        environment:
          KUBECONFIG: '{{ KUBECONFIG }}'
        register: output
        retries: 50
        delay: 15
        until: "'false' not in output.stdout"
        changed_when: false
        loop:
          - es
          - es-ops

      always:
      - name: acpr logout
        include_role:
          name: avaloq.acpr-auth
          tasks_from: logout.yml
